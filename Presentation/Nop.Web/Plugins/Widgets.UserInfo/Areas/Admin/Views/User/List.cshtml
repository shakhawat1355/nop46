@model UserSearchModel

@{
    //page title
    ViewBag.PageTitle = T("Plugins.Widgets.Crud.IndexPageTitle").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("Announcement.AnnouncementItems");
}
<form asp-controller="User" asp-action="List" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Plugins.Widgets.Crud.IndexPageTitle")
        </h1>
        <div class="float-right">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus-square"></i>
                @T("Admin.Common.AddNew")
            </a>
            <button type="button" id="delete-selected" class="btn btn-danger">
                <i class="far fa-trash-alt"></i>
                @T("Admin.Common.Delete.Selected")
            </button>
            <nop-action-confirmation asp-button-id="delete-selected" />
        </div>

    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">

                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row  search-row ">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            </div>

                            <div class="search-body ">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchName" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchGender" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="SearchGender" asp-items="Model.SearchGenderSelection" />
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-users" class="btn btn-primary btn-search">
                                            <i class="fas fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="card card-default">
                        <div class="card-body">
                            @await Html.PartialAsync("Table", new DataTablesModel
                            {
                            Name = "UsersInfo-grid",
                            UrlRead = new DataUrl("List", "User", null),
                            SearchButtonId = "search-users",
                            Length = Model.PageSize,
                            LengthMenu = Model.AvailablePageSizes,
                            Filters = new List<FilterParameter>
                            {
                            new FilterParameter(nameof(Model.SearchName)),
                            new FilterParameter(nameof(Model.SearchGender)),

                            },
                            ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(UserModel.Id))
                            {
                            IsMasterCheckBox = true,
                            Render = new RenderCheckBox("checkbox_manufacturers"),
                            ClassName =  NopColumnClassDefaults.CenterAll,
                            Width = "50"
                            },
                            new ColumnProperty(nameof(UserModel.Name))
                            {
                            Title = T("Plugins.Widgets.Crud.Name").Text,
                            Width = "150",
                            },
                            new ColumnProperty(nameof(UserModel.DateOfBirth))
                            {
                            Title = T("Plugins.Widgets.Crud.DateOfBirth").Text,
                            Width = "100"

                            Render = new RenderDate() { Format = "DD-MM-YYYY" }
                            },
                            new ColumnProperty(nameof(UserModel.Gender))
                            {
                            Title = T("Plugins.Widgets.Crud.Gender").Text,
                            Width = "100"
                            },
                            new ColumnProperty(nameof(UserModel.Phone))
                            {
                            Title = T("Plugins.Widgets.Crud.Phone").Text,
                            Width = "100",
                            },
                            new ColumnProperty(nameof(UserModel.Id))
                            {
                            Title = T("Plugins.Widgets.Crud.EditButton").Text,
                            Width = "100",
                            ClassName =  NopColumnClassDefaults.Button,
                            Render = new RenderButtonEdit(new DataUrl("Edit"))
                            },
                            }
                            })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>

<script>
    $(document).ready(function () {
        $('#delete-selected-action-confirmation-submit-button').bind('click', function () {
            var postData = {
                selectedIds: selectedIds
            };
            addAntiForgeryToken(postData);
            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("DeleteSelected", "User"))",
                data: postData,
                error: function (jqXHR, textStatus, errorThrown) {
                    showAlert('deleteSelectedFailed', errorThrown);
                },
                complete: function (jqXHR, textStatus) {
                    if (jqXHR.status === 204) {
                        showAlert('nothingSelectedAlert', '@T("Admin.Common.Alert.NothingSelected")');
                        return;
                    }
                    updateTable('#UsersInfo-grid');
                }
            });
            $('#delete-selected-action-confirmation').modal('toggle');
            return false;
        });
    });
</script>